{"ast":null,"code":"var _jsxFileName = \"/Users/imane/Desktop/softwareEngineering/React/BreakWeek/lab/react-star-wars/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport StarShipCard from \"./component/StarShipCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  const [planet, setPlanet] = useState([]);\n  const [films, setfilms] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n  useEffect(() => {\n    async function fetchPeople() {\n      let res = await fetch('https://swapi.dev/api/people/');\n      let data = await res.json();\n      setPeople(data.results);\n    }\n\n    async function fetchPlanet() {\n      let res = await fetch('https://swapi.dev/api/planets/');\n      let data = await res.json();\n      setPlanet(data.results);\n    }\n\n    async function fetchFilms() {\n      let res = await fetch('http https://swapi.dev/api/films/');\n      let data = await res.json();\n      setfilms(data.results);\n    }\n\n    async function fetchVehicles() {\n      let res = await fetch('http https://swapi.dev/api/vehicles/');\n      let data = await res.json();\n      setVehicles(data.results);\n    }\n\n    async function fetchSpecies() {\n      let res = await fetch('http https://swapi.dev/api/species/');\n      let data = await res.json();\n      setSpecies(data.results);\n    }\n\n    fetchPeople();\n    fetchPlanet();\n    fetchFilms();\n    fetchVehicles();\n    fetchSpecies();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(StarShipCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0jspvbnLOAWhHaJqz1W3/cxebKg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StarShipCard","App","people","setPeople","planet","setPlanet","films","setfilms","vehicles","setVehicles","species","setSpecies","fetchPeople","res","fetch","data","json","results","fetchPlanet","fetchFilms","fetchVehicles","fetchSpecies"],"sources":["/Users/imane/Desktop/softwareEngineering/React/BreakWeek/lab/react-star-wars/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport StarShipCard from \"./component/StarShipCard\"\n\nfunction App() {\n  const [people, setPeople] = useState([]);\n  const [planet, setPlanet] = useState([]);\n  const [films, setfilms] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [species, setSpecies] = useState([]);\n\n  useEffect(() => {\n    async function fetchPeople() {\n      let res = await fetch('https://swapi.dev/api/people/')\n      let data = await res.json()\n      setPeople(data.results);\n    }\n    async function fetchPlanet() {\n      let res = await fetch('https://swapi.dev/api/planets/')\n      let data = await res.json()\n      setPlanet(data.results);\n    }\n    async function fetchFilms() {\n      let res = await fetch('http https://swapi.dev/api/films/')\n      let data = await res.json()\n      setfilms(data.results);\n    }\n    async function fetchVehicles() {\n      let res = await fetch('http https://swapi.dev/api/vehicles/')\n      let data = await res.json()\n      setVehicles(data.results);\n    }\n    async function fetchSpecies() {\n      let res = await fetch('http https://swapi.dev/api/species/')\n      let data = await res.json()\n      setSpecies(data.results);\n    }\n\n    fetchPeople();\n    fetchPlanet();\n    fetchFilms();\n    fetchVehicles();\n    fetchSpecies();\n  },)\n  \n\n  return (\n    <div className=\"App\">\n      <StarShipCard/>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,eAAea,WAAf,GAA6B;MAC3B,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAArB;MACA,IAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAb,SAAS,CAACY,IAAI,CAACE,OAAN,CAAT;IACD;;IACD,eAAeC,WAAf,GAA6B;MAC3B,IAAIL,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAArB;MACA,IAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAX,SAAS,CAACU,IAAI,CAACE,OAAN,CAAT;IACD;;IACD,eAAeE,UAAf,GAA4B;MAC1B,IAAIN,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAArB;MACA,IAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAT,QAAQ,CAACQ,IAAI,CAACE,OAAN,CAAR;IACD;;IACD,eAAeG,aAAf,GAA+B;MAC7B,IAAIP,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAArB;MACA,IAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAP,WAAW,CAACM,IAAI,CAACE,OAAN,CAAX;IACD;;IACD,eAAeI,YAAf,GAA8B;MAC5B,IAAIR,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAArB;MACA,IAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAL,UAAU,CAACI,IAAI,CAACE,OAAN,CAAV;IACD;;IAEDL,WAAW;IACXM,WAAW;IACXC,UAAU;IACVC,aAAa;IACbC,YAAY;EACb,CAhCQ,CAAT;EAmCA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA/CQpB,G;;KAAAA,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}